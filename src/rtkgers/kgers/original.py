"""
See class summary.

The style guide follows the strict python PEP 8 guidelines.
@see http://www.python.org/dev/peps/pep-0008/

@author Aaron Zampaglione <azampagl@azampagl.com>
@requires Python >=2.7
@copyright 2014 - Present Aaron Zampaglione
"""
import utils

from kgers.core import KGERSCore
from hyperplane import Hyperplane
from exceptions.hyperplane import HyperplaneException


class KGERSOriginal(KGERSCore):
  """
  The original KGERS algorithn generates k hyperplanes and averages
  them using weights generated by cross validation.
  """

  def execute(self):
    """
    """

    hyperplanes = []
    weights = []

    for i in range(0, 10):
      # Create a hyperplane from the training points.
      hyperplane = Hyperplane.sample(self.training)

      # Grab a set of validators that are not in the training set.
      validation = utils.math.sample(self.training, exclude=hyperplane.points)

      hyperplanes.append(hyperplane)

      # Find the weight for this hyperplane.
      weights.append(utils.hyperplane.weigh(hyperplane, validators))

    self.coefficients = utils.hyperplane.average(hyperplanes, weights)
